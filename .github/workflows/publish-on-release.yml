# Inspired by https://github.com/SnakeskinTpl/language-tools/blob/main/.github/workflows/publish-on-release.yaml
name: Publish extension on GitHub Release

on:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  build-vsix:
    name: Build VSIX
    runs-on: ubuntu-latest
    outputs:
      vsixName: ${{ steps.vsixName.outputs.name }}
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Set up Node 20 📦
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      - name: Install dependencies 🧰
        run: |
          npm ci
          npm install -g @vscode/vsce

      - name: Build the language service
        run: npm run langium:generate

      - name: Package the extension 🔧
        run: vsce package

      - name: Get VSIX name 📦
        id: vsixName
        run: echo "name=$(npm pkg get name | tr -d \")-$(npm pkg get version | tr -d \").vsix" >> "$GITHUB_OUTPUT"

      - name: Upload Extension Package as Artifact ⬆️
        uses: actions/upload-artifact@v4
        with:
          path: ${{ steps.vsixName.outputs.name }}
          name: ${{ steps.vsixName.outputs.name }}
          if-no-files-found: error

  publish-release-vsix:
    name: Attach VSIX to Release
    needs: build-vsix
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: ${{ github.event_name == 'release' }}
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Download VSIX package 📥
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-vsix.outputs.vsixName }}

      - name: Attach the VSIX to the release
        run: gh release upload ${{ github.event.release.tag_name }} ${{ needs.build-vsix.outputs.vsixName }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-vscode:
    name: Publish to Visual Studio Marketplace
    needs: build-vsix
    runs-on: ubuntu-latest
    steps:
      - name: Download VSIX package 📥
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-vsix.outputs.vsixName }}

      - name: Set up Node 20 📦
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install vsce 🧰
        run: npm install -g @vscode/vsce

      - name: Publish to Visual Studio Marketplace
        run: vsce publish --packagePath ${{ needs.build-vsix.outputs.vsixName }} --pat ${{ secrets.VS_MARKETPLACE_TOKEN }}
